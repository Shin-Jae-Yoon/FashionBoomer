spring:
#  h2:
#    console:
#      enabled: true
#      path: /h2
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://fashionboomer.ckamihij93ee.ap-northeast-2.rds.amazonaws.com:3306/fashionboomer?serverTimezone=Asia/Seoul
#    username: ${DB_USERNAME}
#    password: ${DB_PASSWORD}

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

    hibernate:
      ddl-auto: none  # (1) 스키마 자동 생성
    show-sql: true      # (2) SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print
#  sql:
#    init:
#      data-locations: classpath*:db/h2/data.sql
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${G_CLIENT_ID}
            clientSecret: ${G_CLIENT_SECRET}
            scope:
              - email
              - profile
          kakao:
            client-id: ${K_CLIENT_ID}
            client-secret: ${K_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}" # http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image, account_email
            client-name: Kakao
        provider:
          kakao:
            authorization_uri: https://kauth.kakao.com/oauth/authorize
            token_uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user_name_attribute: id
logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
server:
  servlet:
    encoding:
      force-response: true
mail:
  address:
    admin: kjh42447@gmail.com
jwt:
  key:
    secret: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420